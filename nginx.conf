worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    server_tokens   off;

    sendfile        on;

    keepalive_timeout  65;

    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    client_max_body_size 25M;


    server {
        listen      1080;

        location /materials {
            root            /usr/share/nginx/html;

            # don't send the nginx version number in error pages and Server header
            server_tokens   off;

            # config to don't allow the browser to render the page inside an frame or iframe
            # and avoid clickjacking http://en.wikipedia.org/wiki/Clickjacking
            # if you need to allow [i]frames, you can use SAMEORIGIN or even set an uri with ALLOW-FROM uri
            # https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options
            add_header      X-Frame-Options "SAMEORIGIN";

            # when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
            # to disable content-type sniffing on some browsers.
            # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
            # currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx
            # http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
            # 'soon' on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020
            add_header      X-Content-Type-Options "nosniff";

            # This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
            # It's usually enabled by default anyway, so the role of this header is to re-enable the filter for 
            # this particular website if it was disabled by the user.
            # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
            add_header      X-XSS-Protection "1; mode=block";

            # Prevents from leaking referrer data over insecure connections.
            # ref.: https://scotthelme.co.uk/a-new-security-header-referrer-policy/
            add_header      Referrer-Policy "strict-origin";

            # Prevents browser features https://scotthelme.co.uk/a-new-security-header-feature-policy/
            # add_header      Feature-Policy "geolocation 'none';midi 'none';sync-xhr 'none';microphone 'none';camera 'none';magnetometer 'none';gyroscope 'none';fullscreen 'self';payment 'none'";

            # Protects against Clickjacking attacks.
            # ref.: https://www.owasp.org/index.php/HTTP_Strict_Transport_Security_Cheat_Sheet
            add_header      Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";

            add_header      Pragma "no-cache";
            add_header      Cache-Control "no-cache, no-store, must-revalidate, proxy-revalidate";

            index           index.html index.htm;
        }
}
}
